<?php
# This file was automatically generated by the MediaWiki 1.41.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Birklehof-Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://" . (getenv('DOMAIN', true) ?: getenv('DOMAIN'));

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
    'svg' => "$wgResourceBasePath/resources/assets/logo.svg",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "db";
$wgDBname = getenv('MYSQL_DATABASE', true) ?: getenv('MYSQL_DATABASE');
$wgDBuser = getenv('MYSQL_USER', true) ?: getenv('MYSQL_USER');
$wgDBpassword = getenv('MYSQL_PASSWORD', true) ?: getenv('MYSQL_PASSWORD');

## Admin settings
$wgAdminUser = getenv('ADMIN_USER', true) ?: getenv('MYSQL_USER', true) ?: getenv('MYSQL_USER');
$wgAdminPassword = getenv('ADMIN_PASSWORD', true) ?: getenv('MYSQL_PASSWORD', true) ?: getenv('MYSQL_PASSWORD');

# MySQL specific settings
$wgDBprefix = "";
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "de";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "24968d3cc7033e580b8ec2fea857ac27a65af40aa4d641f1a9f50cf25989b46e";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "c7d5095277187846";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

## Set default skin
$wgDefaultSkin = "vector";

# Enabled skins
wfLoadSkin('MinervaNeue');
wfLoadSkin('MonoBook');
wfLoadSkin('Timeless');
wfLoadSkin('Vector');


# Extensions
wfLoadExtension('Cite');
wfLoadExtension('PdfHandler');
wfLoadExtension('Poem');
wfLoadExtension('WikiEditor');
wfLoadExtension('MP3MediaHandler');
wfLoadExtension('ConfirmAccount');
wfLoadExtension('TemplateStyles');
wfLoadExtension( 'Scribunto' );
$wgScribuntoDefaultEngine = 'luastandalone';
wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'InputBox' );

# SMTP Settings
$wgSMTP = [
    'host'     => getenv('SMTP_HOST', true) ?: getenv('SMTP_HOST'),
    'IDHost'   => getenv('SMTP_ID_HOST', true) ?: getenv('SMTP_ID_HOST'),
    'port'     => getenv('SMTP_PORT', true) ?: getenv('SMTP_PORT'),
    'auth'     => getenv('SMTP_AUTH', true) ?: getenv('SMTP_AUTH'),
    'username' => getenv('SMTP_USER', true) ?: getenv('SMTP_USER'),
    'password' => getenv('SMTP_PASSWORD', true) ?: getenv('SMTP_PASSWORD')
];

# Confirm Account Extension Settings
$wgGroupPermissions['*']['createaccount'] = false; // REQUIRED to enforce account requests via this extension
$wgConfirmAccountContact = "birklehof@paulmaier.online";

# Upload Settings
$wgMaxUploadSize = 20971520; # Set max upload size to 20 MB
# $wgFileExtensions[] = 'pdf'; # Adds PDF as uploadable file extension
$wgFileExtensions[] = 'wav'; # Adds WAV as uploadable file extension
$wgFileExtensions[] = 'ogg'; # Adds OGG as uploadable file extension

# $wgShowExceptionDetails = true; # Set to true for debugging